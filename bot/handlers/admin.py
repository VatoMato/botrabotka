# bot\handlers\admin.py        –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ –ü—Ä–æ–º—Ç—É 14
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from models.user import User
from models.order import Order
from bot.config import Config

admin_router = Router()

# –§–∏–ª—å—Ç—Ä —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è from_user
async def admin_filter(message: Message) -> bool:
    return message.from_user is not None and message.from_user.id in Config.ADMINS

@admin_router.message(Command("admin"), admin_filter)
async def admin_panel(message: Message):
    text = (
        "üìä –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:\n"
        "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞:\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {await User.all().count()}\n"
        f"–ó–∞–∫–∞–∑—ã: {await Order.filter(status='completed').count()}"
    )
    await message.answer(text)

@admin_router.callback_query(F.data == "force_close_order")
async def force_close_order(callback: CallbackQuery):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –µ–≥–æ —Ç–µ–∫—Å—Ç–∞
    if not callback.message or not isinstance(callback.message, Message):
        await callback.answer("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")
        return
    
    message_text = callback.message.text
    if not message_text:
        await callback.answer("–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        return
    
    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ order_id
    try:
        order_id_part = message_text.split("#")[1]
        order_id = order_id_part.split()[0].strip()
    except (IndexError, AttributeError):
        await callback.answer("–û—à–∏–±–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∑–∞–∫–∞–∑–∞")
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
    order = await Order.get_or_none(id=order_id)
    if not order:
        await callback.answer("–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    order.status = "force_closed"
    await order.save()
    await callback.answer("–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç")